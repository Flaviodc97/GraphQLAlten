// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgrammingLanguageGraphQL.Data;

#nullable disable

namespace ProgrammingLanguageGraphQL.Migrations
{
    [DbContext(typeof(ProgrammingLanguageDbContext))]
    [Migration("20230311093238_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProgrammingLanguageGraphQL.Models.ProgrammingLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TypeLanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeLanguageId");

                    b.ToTable("ProgrammingLanguages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d80f35bd-3b58-4ef0-9aa3-88204f9edfb8"),
                            Description = "Python è un linguaggio di programmazione di \"alto livello\", orientato a oggetti, adatto, tra gli altri usi, a sviluppare applicazioni distribuite, scripting, computazione numerica e system testing.",
                            Name = "Python",
                            ReleaseDate = new DateTime(2015, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLanguageId = new Guid("478feb93-8dcb-4d39-b829-df130869dda5")
                        },
                        new
                        {
                            Id = new Guid("a6c3addf-b40e-455d-8d80-397d50103c19"),
                            Description = "Java è un linguaggio di programmazione di \"alto livello\", orientato a oggetti, adatto, tra gli altri usi, a sviluppare applicazioni distribuite, scripting, computazione numerica e system testing.",
                            Name = "Java",
                            ReleaseDate = new DateTime(2015, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLanguageId = new Guid("4220f9a0-9f21-45e4-a440-c579390ac1ff")
                        },
                        new
                        {
                            Id = new Guid("27797c1c-fdfa-4eb5-ae6a-b013c2678548"),
                            Description = "C# è un linguaggio di programmazione di \"alto livello\", orientato a oggetti, adatto, tra gli altri usi, a sviluppare applicazioni distribuite, scripting, computazione numerica e system testing.",
                            Name = "c#",
                            ReleaseDate = new DateTime(2015, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeLanguageId = new Guid("e7acf30a-c40a-4829-a978-1fd784d39be1")
                        });
                });

            modelBuilder.Entity("ProgrammingLanguageGraphQL.Models.TypeLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = new Guid("478feb93-8dcb-4d39-b829-df130869dda5"),
                            Name = "Procedural programming languages"
                        },
                        new
                        {
                            Id = new Guid("e7acf30a-c40a-4829-a978-1fd784d39be1"),
                            Name = "Functional programming languages"
                        },
                        new
                        {
                            Id = new Guid("4220f9a0-9f21-45e4-a440-c579390ac1ff"),
                            Name = "Object-oriented programming languages"
                        },
                        new
                        {
                            Id = new Guid("40d90a44-e98e-4593-9de3-b773f68e52b0"),
                            Name = "Scripting languages"
                        });
                });

            modelBuilder.Entity("ProgrammingLanguageGraphQL.Models.ProgrammingLanguage", b =>
                {
                    b.HasOne("ProgrammingLanguageGraphQL.Models.TypeLanguage", "TypeLanguage")
                        .WithMany("ProgrammingLanguages")
                        .HasForeignKey("TypeLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeLanguage");
                });

            modelBuilder.Entity("ProgrammingLanguageGraphQL.Models.TypeLanguage", b =>
                {
                    b.Navigation("ProgrammingLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
